<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<!-- 自动加载对应的 数据访问层接口类 -->
	<bean id="mycatDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_user}" />
		<property name="password" value="${jdbc_password}" />
		<!--initialSize: 初始化连接-->
		<property name="initialSize" value="10"/>
		<!--minIdle: 最小空闲连接-->
		<property name="minIdle" value="5"/>
		<!--maxActive: 最大连接数量-->
		<property name="maxActive" value="200"/>
		<!--removeAbandoned: 是否自动回收超时连接-->
		<property name="removeAbandoned" value="true"/>
		<!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->
		<property name="removeAbandonedTimeout" value="300"/>
		<!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒-->
		<property name="maxWait" value="60000"/>
		<property name="validationQuery" value="select 1"/>
		<property name="poolPreparedStatements" value="true" />
		<property name="maxOpenPreparedStatements" value="10" />
	</bean>

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mycatDataSource"/>
		<!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.dod.sport.domain.po,com.dod.sport.domain.dto"/>
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/*.xml"/>
		<property name="configLocation" value="classpath:/jdbc/mybatis-config.xml"/>
	</bean>

	<!-- 事务控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mycatDataSource"/>
	</bean>

	<!-- 启动注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

<!--	 定义事务管理器（声明式的事务）
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="updat*" propagation="REQUIRED"/>
			<tx:method name="cal*" propagation="REQUIRED"/>
			<tx:method name="*Change" propagation="REQUIRED"/>
			<tx:method name="*Give" propagation="REQUIRED"/>
			<tx:method name="*Start" propagation="REQUIRED"/>
			<tx:method name="*Transfer" propagation="REQUIRED"/>
			<tx:method name="*Recharge" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="add*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="interceptorPointCuts" expression="execution(* com.dod.sport.service.impl.*.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts"/>
	</aop:config>-->

	<!-- 扫描basePackage下接口 自动生成代理实现类 -->
	<mybatis:scan base-package="com.dod.sport.dao" factory-ref="sqlSessionFactory"></mybatis:scan>
</beans>