<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<import resource="classpath*:shardingRule.xml"/>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="shardingDataSource"/>
		<qualifier value="platform"/>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="shardingDataSource"/>
		<!-- 自动扫描domain目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.dod.sport.domain"/>		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/questionknow.xml"/>
	</bean>
	<!-- 扫描basePackage下接口 自动生成代理实现类 -->
	<mybatis:scan base-package="com.dod.sport.dao" factory-ref="sqlSessionFactory"></mybatis:scan>
	<!-- 自动加载对应的 数据访问层接口类 -->

	<import resource="classpath:/jdbc/shardingDB-test.xml"/>

	<bean id="shardingDataSource" class="com.dangdang.ddframe.rdb.sharding.api.ShardingDataSource">
		<constructor-arg ref="shardingRule"/>
	</bean>


	<!--start 数据库分库规则定义-->
	<bean id="databaseShardingStrategy_id" class="com.dangdang.ddframe.rdb.sharding.api.strategy.database.DatabaseShardingStrategy">
		<constructor-arg index="0" value="id"/>
		<constructor-arg index="1">
			<bean class="com.dod.sport.sharding.algorithm.SingleKeyModuloDatabaseShardingAlgorithm" />
		</constructor-arg>
	</bean>
</beans>