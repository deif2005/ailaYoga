<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dod.sport.dao.IEmployeeDao">

    <sql id="employeeBase" >
        e.id,e.employee_serial_id,emp.base_employee_serial_id,emp.employee_name,emp.sex,emp.phone_num,
        emp.id_card,e.business_id,emp.birthday,emp.register_type,e.entry_date, e.position_id,e.store_id,
        e.dep_id,e.emp_type,e.is_coach,e.emp_rela,e.status,e.emp_picture,
        emp.emp_head,e.job_title,e.self_introduction,e.role_id,emp.id_card
    </sql>
    <select id="queryRegisterIdMax" resultType="String">
        SELECT IFNULL(MAX(base_employee_serial_id),0) AS base_employee_serial_id FROM bs_employee
    </select>

    <!--获取员工关系表最大编号-->
    <select id="queryEmployeeIdMax" resultType="String">
        SELECT IFNULL(MAX(employee_serial_id),0) AS employee_serial_id FROM bs_empbusiness_relation
        WHERE business_id=#{businessId}
    </select>

    <!--根据id获取员工详细信息-->
    <select id="getEmpBusinessRelationById" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId ,de.dep_name AS depName,po.position_name AS positionName,st.id AS storeId,st.store_name AS storeName,
        st.address AS storeAddress, bs.business_name AS businessName,bs.address AS businessAddress
        FROM bs_empbusiness_relation AS e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS usrl ON e.role_id=usrl.id
        WHERE  e.id=#{id}
    </select>

    <!--模糊查询员工详细信息 -->
    <select id="listEmpBusinessRelationByName" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId,de.dep_name AS depName,po.position_name AS positionName,st.id AS storeId,st.store_name AS storeName,
        st.address AS storeAddress, bs.business_name AS businessName,bs.address AS businessAddress
        FROM bs_empbusiness_relation AS e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS usrl ON e.role_id=usrl.id
       <where>
           <if test="employeeName != null and employeeName!='' ">
               AND emp.employee_name  LIKE '%${employeeName}%'
           </if>
           AND e.store_id = #{storeId}  AND  e.status =1
       </where>

    </select>

    <!--获取员工详细信息-->
    <select id="getEmployeeByPhoneNum" resultType="EmployeeInfo">
        SELECT
        emp.id,
        base_employee_serial_id,
        emp.employee_name,
        emp.sex,
        emp.birthday,
        emp.phone_num,
        emp.id_card,
        emp.emp_head,
        emp.register_type,
        emp.create_time
        FROM bs_employee emp
        WHERE  emp.phone_num = #{phoneNum} AND emp.status = 1
    </select>

    <!--获取员工关系列表-->
    <select id="getEmpListByPhoneNumAndEmpStatus" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId,de.dep_name AS depName,po.position_name AS positionName,st.id AS storeId,st.store_name AS storeName,
        st.address AS storeAddress, bs.business_name AS businessName,bs.address AS businessAddress
        FROM bs_empbusiness_relation AS e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS usrl ON e.role_id=usrl.id
        WHERE emp.phone_num=#{phoneNum} AND e.status=1
    </select>

    <!--根据员工关系id获取员工所在的商家信息-->
    <select id="queryBusinessInfoByEmployeeId" parameterType="String" resultType="BusinessInfo">
        SELECT
          b.id,
          b.business_serial_id,
          b.business_name,
          b.address
        FROM bs_businessinfo b
        WHERE b.id = (SELECT e.business_id FROM bs_empbusiness_relation e WHERE e.id = #{id} AND e.status = 1);
    </select>

    <!--根据用户的电话号码和商场编号查询用户-->
    <select id="queryEmployeeInfoByStoreIdAndPhoneNum" parameterType="ResponseEmployee" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId,de.dep_name AS depName,po.position_name AS positionName,st.id AS storeId,st.store_name AS storeName,
        st.address AS storeAddress, bs.business_name AS businessName,bs.address AS businessAddress,role.role_name
        FROM  bs_empbusiness_relation e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS role ON role.id = e.role_id
        where e.store_id = #{storeId} AND  emp.phone_num = #{phoneNum} AND e.status = 1;
    </select>

    <!--员工登陆-->
    <select id="doLogin" parameterType="EmployeeInfo" resultType="EmployeeInfo">
       SELECT
          emp.id ,
          emp.base_employee_serial_id,
          emp.employee_name,
          emp.sex,
          emp.birthday,
          emp.phone_num,
          emp.id_card,
          emp.emp_head,
          emp.create_time
        FROM bs_employee emp
        where emp.password = #{password} AND  emp.phone_num = #{phoneNum}AND emp.status = 1
    </select>

    <!--员工注册-->
    <update id="registerEmployee" parameterType="EmployeeInfo" >
      UPDATE
           bs_employee emp
      SET
         emp.password = #{password},
         emp.register_type = #{registerType}
      WHERE emp.phone_num = #{phoneNum}AND emp.status = 1;
    </update>

    <!--更新员工密码-->
    <update id="updateEmployeePassword" parameterType="EmployeeInfo" >
        UPDATE
         bs_employee emp
        SET
        emp.password = #{password}
        WHERE emp.phone_num = #{phoneNum}AND emp.status = 1;
    </update>

    <!--插入员工基础信息-->
    <insert id="addBaseEmployeeInfo">
        INSERT INTO bs_employee
            (id,
             base_employee_serial_id,
             employee_name,
             sex,
        <if test="birthday !=null and birthday!=''">
            birthday,
        </if>
             phone_num,
             id_card
             )
        VALUES ( #{id},
                #{baseEmployeeSerialId},
                #{employeeName},
                #{sex},
        <if test="birthday !=null and birthday!=''">
               #{birthday},
        </if>
                #{phoneNum},
                #{idCard}
                );
    </insert>

    <!--添加员工信息-->
    <insert id="addEmpBusinessRelation" parameterType="EmpBusinessRelation">
        INSERT INTO bs_empbusiness_relation
            (id,
             employee_serial_id,
             emp_id,
             business_id,
             store_id,
             dep_id,
             position_id,
             emp_type,
             emp_rela,
             role_id,
             entry_date,
        <if test=" selfIntroduction!='' ">
            self_introduction,
        </if>
            is_coach,
        <if test="isCoach =2 ">
            job_title,
        </if>
             creator)
        VALUES (
            #{id},
            #{employeeSerialId},
            #{empId},
            #{businessId},
            #{storeId},
            #{depId},
            #{positionId},
            #{empType},
            #{empRela},
            #{roleId},
            #{entryDate},
        <if test=" selfIntroduction!='' ">
            #{selfIntroduction},
        </if>
            #{isCoach},
        <if test=" isCoach==2 ">
            #{jobTitle},
        </if>
            #{creator});
    </insert>

    <!--根据商家编号获取员工信息-->
    <select id="getEmployeeIdByBusiId" resultType="String">
      SELECT
        id
      FROM bs_empbusiness_relation
      WHERE business_id in (
      <foreach collection="businessIds" item="item" index="index" separator=",">
          #{item}
      </foreach>
      )
    </select>

    <!--根据门店编号获取员工信息-->
    <select id="getEmployeeIdByStoreId" resultType="String">
        SELECT
          id
        FROM bs_empbusiness_relation
        WHERE store_id in (
        <foreach collection="storeIds" item="item" index="index" separator=",">
            #{item}
        </foreach>
    </select>

    <!--获取所有入职的员工信息-->
    <select id="getEmployeeIdByEmpStatus" resultType="String">
        SELECT id FROM bs_empbusiness_relation WHERE status=1
    </select>

    <!--获取门店所有员工信息-->
    <select id="listEmpBusinessRelationByStoreId" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId,de.dep_name AS depName,po.position_name AS positionName FROM bs_empbusiness_relation e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        WHERE e.store_id=#{storeId} AND e.status = 1
    </select>

    <!--获取门店所有员工信息-->
    <select id="getEmpBusinessRelationByStoreId" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId,de.dep_name AS depName,po.position_name AS positionName FROM bs_empbusiness_relation e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        WHERE store_id=#{storeId}
        <if test="employeeId != null and employeeId!='' ">
           and emp.id = #{employeeId}
        </if>
        <if test="employeeName != null and employeeName!='' ">
           like CONCAT('%', #{employeeName}, '%')
        </if>
        LIMIT #{startPage},#{endPage}
    </select>

    <!--获取门店所有教练列表-->
    <select id="queryCoachListByStoreId" resultType="EmployeeEvaluateInfo">
        SELECT <include refid="employeeBase"/>,emp.id AS empId FROM bs_empbusiness_relation e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        WHERE e.is_coach =2 AND e.store_id = #{storeId} AND e.status = 1
        <if test="startPage!=null and startPage!='' and endPage!=null and endPage ">
            LIMIT #{startPage},#{endPage}
        </if>
    </select>

    <!--获取该部门下所有的员工-->
    <select id="queryEmpListByDepId" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId FROM bs_empbusiness_relation e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS role ON role.id = e.role_id
        WHERE
        e.dep_id = #{depId} AND  e.store_id = #{storeId} AND e.status = 1
        <if test="employeeName !=null and employeeName!=''">
            AND emp.employee_name  LIKE '%${employeeName}%'
        </if>
    </select>

    <!--编辑员工基本信息-->
    <update id="updateEmployeInfo">
      UPDATE bs_employee
        <set>
            <if test="employeeName !=null and employeeName!='' ">
                employee_name = #{employeeName},
            </if>
            <if test="sex !=null and sex != '' and sex!=0 ">
                sex = #{sex},
            </if>
            <if test="phoneNum!=null and phoneNum!='' ">
                phone_num = #{phoneNum},
            </if>
            <if test=" empHead!='' ">
                emp_head = #{empHead},
            </if>
            <if test=" birthday!='' ">
                birthday = #{birthday},
            </if>
            <if test="idCard != null and idCard!='' ">
                id_card = #{idCard}
            </if>
        </set>
      WHERE id = #{id}
    </update>

    <!--编辑员工关系表信息 -->
    <update id="updateEmpBusinessRelation">
        UPDATE bs_empbusiness_relation
        <set>
            <if test=" entryDate!='' ">
                entry_date = #{entryDate},
            </if>
            <if test="positionId != null and positionId!='' ">
                position_id = #{positionId},
            </if>
            <if test="storeId != null and storeId!='' ">
                store_id = #{storeId},
            </if>
            <if test="depId != null and depId!='' ">
                dep_id = #{depId},
            </if>
            <if test="empRela != null and empRela!=0 ">
                emp_rela = #{empRela},
            </if>
            <if test="roleId != null and roleId !='' ">
                role_id = #{roleId},
            </if>
            <if test="empType!=null and empType !=''and empType !=0  ">
                emp_type = #{empType},
            </if>
            <if test=" empPicture!='' ">
                emp_picture = #{empPicture},
            </if>
            <if test="jobTitle !=null and jobTitle != '' and jobTitle!=0 ">
                job_title = #{jobTitle},
            </if>
            <if test="isCoach !=null and isCoach != '' and isCoach!=0 ">
                is_coach = #{isCoach},
            </if>
            <if test="selfIntroduction!='' ">
                self_introduction = #{selfIntroduction}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!--查询所有员工信息-->
    <select id="queryEmpAll" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>,emp.id AS empId,de.dep_name AS depName,po.position_name AS positionName,st.id AS storeId,st.store_name AS storeName,
        st.address AS storeAddress, bs.business_name AS businessName,bs.address AS businessAddress,role.role_name
        FROM bs_empbusiness_relation AS e
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS role ON role.id = e.role_id
        WHERE  e.status = 1
        LIMIT #{startPage},#{endPage}
    </select>
    
    <!--查询员工总记录数-->
    <select id="queryEmpCounts" resultType="long">
        SELECT COUNT(*) FROM bs_empbusiness_relation WHERE  status = 1
    </select>

    <!--查询教练的当前周的评价平均值-->
    <select id="queryAvgMemberevaluate" resultType="MemberEvaluate">
       SELECT WEEK(m.create_time) AS weekNum,ROUND(AVG(m.teach_level),1) AS AvgTeachLevel,ROUND(AVG(m.service_level),1)AvgServiceLevel,ROUND(AVG(m.environment_level),1) AS AvgEnvironmentlevel
       FROM bs_member_evaluate AS m
       INNER JOIN bs_empbusiness_relation AS empr ON empr.id =  m.emp_id
       WHERE m.emp_id=#{id}  AND empr.status = 1 group by week(m.create_time)
    </select>

    <!--查询教练评价列表 -->
    <select id="listQueryMemberevaluate" resultType="MemberEvaluate">
        SELECT
        m.id,
        m.member_id,
        m.emp_id,
        m.course_id,
        m.teach_level,
        m.service_level,
        m.environment_level,
        m.evaluate_str,
        m.create_time,
        member.member_name,
        emp.employee_name ,
        FROM bs_member_evaluate AS m
        INNER JOIN bs_member AS member ON member.id = m.member_id
        INNER JOIN bs_empbusiness_relation AS e ON e.id = m.emp_id
        INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
        INNER JOIN bs_course_plan AS plan ON plan.course_id = m.course_id AND plan.store_id = e.store_id
        WHERE m.emp_id = #{empId}
         <if test="courseId !=null and courseId != ''">
            and m.course_id = #{courseId}
         </if>
        AND e.status = 1
        GROUP BY m.create_time
        LIMIT #{startPage},#{endPage}
    </select>

    <!--获取员工的总评价 -->
    <select id="getEmpMemberevaluateById" resultType="EmployeeEvaluateInfo">
        SELECT emp.employee_name AS employeeName,emp.emp_head, ROUND(AVG(m.teach_level),1) AS AvgTeachLevel,ROUND(AVG(m.service_level),1)AvgServiceLevel,ROUND(AVG(m.environment_level),1) AS AvgEnvironmentlevel
         FROM bs_member_evaluate AS m
         INNER JOIN bs_member AS member ON member.id = m.member_id
         INNER JOIN bs_empbusiness_relation AS e ON e.id = m.emp_id
         INNER JOIN bs_employee AS emp ON emp.id =  e.emp_id
         INNER JOIN bs_course_plan AS plan ON plan.course_id = m.course_id
        WHERE m.emp_id=#{id}
    </select>

    <!--获取员工角色 -->
    <select id="getEmployeeRole" resultType="String">
        SELECT
          role.role_code
        FROM bs_empbusiness_relation e
        INNER JOIN man_user_role role ON e.role_id=role.id
        WHERE e.id=#{employeeId}
    </select>

    <!--获取角色列表-->
    <select id="listUserRole" resultType="UserRole">
        SELECT
        id,
        role_code,
        role_name,
        business_id,
        model_serial_idstr,
        function_serial_idstr,
        detail_serial_idstr,
        platform
        FROM man_user_role
        WHERE 1=1
        <if test="platform!=null and platform!=0">
            AND platform=#{platform}
        </if>
        <if test="businessId!=null and businessId!=''">
            AND business_id=#{businessId}
        </if>
        <if test="startPage != null and startPage != 0">
            LIMIT #{startPage},#{endPage}
        </if>
    </select>

    <!--查询教练详情-->
    <select id="getCoachInfoById" resultType="CoachInfo">
        SELECT
          e.id,
          e.employee_serial_id,
          emp.id AS empId,
          emp.emp_head,
          emp.employeeName,
          e.emp_picture,
          e.job_title,
          e.self_introduction
        FROM bs_empbusiness_relation e
        INNER  JOIN  bs_employee emp ON emp.id = e.emp_id
        WHERE  e.id = #{id} AND e.is_coach = 2
    </select>

    <!--根据身份证查询员工信息-->
    <select id="getEmpBusinessRelationByIdCard" resultType="ResponseEmployee">
        SELECT <include refid="employeeBase"/>
        FROM bs_empbusiness_relation e
        INNER JOIN bs_employee emp ON emp.id = e.emp_id
        INNER JOIN bs_storeinfo AS st ON st.id =  e.store_id
        INNER JOIN bs_business_department AS de ON de.id = e.dep_id
        INNER JOIN bs_business_position AS po ON  po.id = e.position_id
        INNER JOIN bs_businessinfo AS bs ON bs.id = e.business_id
        INNER JOIN man_user_role AS role ON role.id = e.role_id
        WHERE emp.id_card =#{idCard} AND emp.phone_num =#{phoneNum} AND e.status = 1 AND e.store_id = #{storeId}
    </select>

</mapper>